[{"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/index.js":"1","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/App.js":"2","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/reportWebVitals.js":"3","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/pages/home.jsx":"4","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Banner.jsx":"5","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/FormRecomendados.jsx":"6","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Title.jsx":"7","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Footer.jsx":"8","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Video.jsx":"9","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/schemas/recomendados-schema.js":"10"},{"size":500,"mtime":1607455344966,"results":"11","hashOfConfig":"12"},{"size":358,"mtime":1607455344966,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607455344966,"results":"14","hashOfConfig":"12"},{"size":944,"mtime":1607562694329,"results":"15","hashOfConfig":"12"},{"size":149,"mtime":1607455344966,"results":"16","hashOfConfig":"12"},{"size":11137,"mtime":1607455344966,"results":"17","hashOfConfig":"12"},{"size":962,"mtime":1607551447713,"results":"18","hashOfConfig":"12"},{"size":678,"mtime":1607562223466,"results":"19","hashOfConfig":"12"},{"size":501,"mtime":1607562678959,"results":"20","hashOfConfig":"12"},{"size":1435,"mtime":1607551440145,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"d2ztjl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/index.js",[],["45","46"],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/App.js",[],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/reportWebVitals.js",[],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/pages/home.jsx",[],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Banner.jsx",[],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/FormRecomendados.jsx",["47"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport is from \"is_js\";\nimport { Formik } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport swal from 'sweetalert2'\n\n\n// Schemas de validación\nimport RecomendadosSchema from \"../schemas/recomendados-schema\";\n\nconst url = \"http://201.151.177.210:8080/api/v1/people/q/add-referrer\";\n\nconst arrs = {\n  civilStatuses: [\"Soltero/a\", \"Casado/a\", \"Viudo/a\", \"Divorciado/a\"],\n  relationships: [\n    \"Familiar\",\n    \"Amigo/a\",\n    \"Conocido/a\",\n    \"Compañero/a de trabajo\",\n  ],\n  jobs: [\"Empleado/a\", \"Jubilado/a\", \"Ama de casa\", \"Estudiante\", \"No trabajo\"],\n  cities: [\n    \"Tijuana\",\n    \"Playas de Rosarito\",\n    \"Ensenada\",\n    \"Mexicali\",\n    \"Tecate\",\n    \"Otra\",\n  ],\n  careOfHealths: [\"Si\", \"No\", \"No sé\", \"A veces\"],\n};\n\n\n\nconst FormRecomendados = ({ phoneNumber }) => {\n  const handleSubmit = async (values) => {\n    const user = {\n      firstName: values.firstName,\n      lastName: values.lastName,\n      phoneNumber: values.phoneNumber,\n      owner: \"5fca85fde39d4c2b08a59482\",\n      referrerPhoneNumber: values.referrerPhoneNumber,\n      job: values.job,\n      city: values.city,\n      fields: [\n        {\n          propertyId: \"5fca8713e39d4c2b08a59483\",\n          data: [values.civilStatus],\n        },\n        {\n          propertyId: \"5fca8713e39d4c2b08a59484\",\n          data: [values.careOfHealth],\n        },\n        {\n          propertyId: \"5fca8713e39d4c2b08a59485\",\n          data: [values.disease],\n        },\n        {\n          propertyId: \"5fca8713e39d4c2b08a59486\",\n          data: [values.age],\n        },\n        {\n          propertyId: \"5fca8713e39d4c2b08a59487\",\n          data: [values.relationship],\n        },\n      ],\n    };\n\n    const { data, status } = await axios.post(url, user);\n    \n    if (status === 201) {\n      console.log(data);\n    }\n    var obj = { 0: 'Agrega el mayor número de referidos, y crea buenos hábitos en tus amigos.',\n                1: 'Cuida de tu cuerpo, es el único lugar que tienes para vivir, Utiliza Royal Prestige.', \n                2: 'La salud es una riqueza, cuida de tus amigos y su salud, regala un obsequio Royal Prestige al anotarlos aquí.',\n                3: 'Recuerda que entre más referidos agregues, más oportunidades tienes de ganar.',\n                4: 'Aprecia y valora tu salud y de quien te rodea todos los días, utiliza Royal Prestige.',\n                5: 'La felicidad radica ante todo en la salud, Comparte tu secreto de cocinar saludable, envía un regalo (sin costo para ti) y anota a más amigos.' };\n    swal.fire({\n      icon: 'success',\n      title: 'Folio:',\n      text: obj[Math.floor(Math.random() * (6 - 0) + 0)],\n    })\n\n  };\n\n  return (  \n    <Formik\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        referrerPhoneNumber: phoneNumber,\n        city: \"\",\n        careOfHealth: \"\",\n        disease: \"\",\n        civilStatus: \"\",\n        age: \"\",\n        relationship: \"\",\n        job: \"\",\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={RecomendadosSchema}\n    >\n      {({\n        values,\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        setFieldValue,\n        errors,\n        touched,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form\">\n            {values.referrerPhoneNumber === \"\" ? (\n              <>\n                <h1 className=\"title2\">\n                  Proporciona tu número de teléfono antes de continuar:{\" \"}\n                </h1>\n                <div className=\"divform\">\n                  <label>\n                    Número de teléfono:{\" \"}\n                    <input\n                      type=\"text\"\n                      name=\"referrerPhoneNumber\"\n                      value={values.referrerPhoneNumber}\n                      className=\"inputform\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                  </label>\n                  <p>{errors?.referrerPhoneNumber}</p>\n                </div>\n              </>\n            ) : null}\n\n            <h1 className=\"title2\">Datos acerca de tus recomendados: </h1>\n            <div>\n              <div className=\"divform\">\n                <label>\n                  Nombre:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    className=\"inputform\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </label>\n                <p>{errors?.firstName}</p>\n              </div>\n              <div className=\"divform\">\n                <label>\n                  Apellidos:{\" \"}\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    className=\"inputform\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </label>\n                <p>{errors?.lastName}</p>\n              </div>\n              <div className=\"divform\">\n                <label>\n                   Número de teléfono:\n                  <input\n                    type=\"text\"\n                    name=\"phoneNumber\"\n                    value={values.phoneNumber}\n                    className=\"inputform\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </label>\n                <p>{errors?.lastName}</p>\n              </div>\n              <div className=\"divform\">\n                <label>¿En qué ciudad vive actualmente su recomendado?</label>\n                <div className=\"divRadio\">\n                  {arrs.cities.map((city, index) => (\n                    <React.Fragment key={`${city.toLowerCase()}-${index}`}>\n                      <input\n                        type=\"radio\"\n                        value={values.city}\n                        name=\"city\"\n                        onChange={() => setFieldValue(\"city\", city)}\n                      />\n                      <text className=\"radioForm\">{city}</text>\n                    </React.Fragment>\n                  ))}\n                </div>\n                <p>{errors?.city}</p>\n              </div>\n              <div className=\"divform\">\n                <label>A su recomendado, ¿Le gusta cuidar su salud?</label>\n                <div className=\"divRadio\">\n                {arrs.careOfHealths.map((careOfHealth, index) => (\n                  <React.Fragment\n                    key={`${careOfHealth.toLowerCase()}-${index}`}>\n                    <input\n                      type=\"radio\"\n                      value={values.careOfHealth}\n                      name=\"careOfHealth\"\n                      onChange={() =>\n                        setFieldValue(\"careOfHealth\", careOfHealth)\n                      }\n                    />\n                    <text className=\"radioForm\">{careOfHealth}</text>\n                  </React.Fragment>\n                ))}\n                </div>\n                <p>{errors?.careOfHealth}</p>\n              </div>\n              <div className=\"divform\">\n                <label>\n                  Su recomendado, ¿Padece de alguna enfermedad? ¿Cuál?\n                  <input\n                    type=\"text\"\n                    name=\"disease\"\n                    value={values.disease}\n                    className=\"inputform\"\n                    onChange={handleChange}\n                  />\n                </label>\n                <p>{errors?.disease}</p>\n              </div>\n              <div className=\"divform\">\n                <label>¿Cuál es su estado civil ? </label>\n\n                <div className=\"divRadio\">\n                  {arrs.civilStatuses.map((civilStatus, index) => (\n                    <React.Fragment\n                      key={`${civilStatus.toLowerCase()}-${index}`}\n                    >\n                      <input\n                        type=\"radio\"\n                        value={values.civilStatus}\n                        name=\"civilStatus\"\n                        onChange={() =>\n                          setFieldValue(\"civilStatus\", civilStatus)\n                        }\n                      />\n                      <text className=\"radioForm\">{civilStatus}</text>\n                    </React.Fragment>\n                  ))}\n                </div>\n                <p>{errors?.civilStatus}</p>\n              </div>\n              <div className=\"divform\">\n                <label>\n                  ¿Cuál es su edad?\n                  <input\n                    type=\"number\"\n                    name=\"age\"\n                    value={values.age}\n                    className=\"inputNumform\"\n                    onChange={handleChange}\n                  />\n                </label>\n                <p>{errors?.age}</p>\n              </div>\n              <div className=\"divform\">\n                <label>¿Qué parentesco tiene usted con el recomendado? </label>\n                <div className=\"divRadio\">\n                  {arrs.relationships.map((relationship, index) => (\n                    <React.Fragment\n                      key={`${relationship.toLowerCase()}-${index}`}\n                    >\n                      <input\n                        type=\"radio\"\n                        value={values.relationship}\n                        name=\"relationship\"\n                        onChange={() =>\n                          setFieldValue(\"relationship\", relationship)\n                        }\n                      />\n                      <text className=\"radioForm\">{relationship}</text>\n                    </React.Fragment>\n                  ))}\n                </div>\n                <p>{errors?.relationship}</p>\n              </div>\n              <div className=\"divform\">\n                <label>¿A qué se dedica su recomendado?</label>\n                <div className=\"divRadio\">\n                  {arrs.jobs.map((job, index) => (\n                    <React.Fragment key={`${job.toLowerCase()}-${index}`}>\n                      <input\n                        type=\"radio\"\n                        value={values.job}\n                        name=\"job\"\n                        onChange={() => setFieldValue(\"job\", job)}\n                      />\n                      <text className=\"radioForm\">{job}</text>\n                    </React.Fragment>\n                  ))}\n                </div>\n                <p>{errors?.job}</p>\n              </div>\n            </div>\n            <div className=\"divform\">\n              <button\n                className=\"buttonForm\"\n                type=\"submit\"\n                disabled={is.not.empty(touched) && is.not.empty(errors)}>\n                ENVIAR\n              </button>\n            </div>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nFormRecomendados.defaultProps = {\n  phoneNumber: \"\",\n};\n\nFormRecomendados.propTypes = {\n  phoneNumber: PropTypes.string,\n};\n\nexport default FormRecomendados;\n","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Title.jsx",["48"],"import React from 'react'\nimport Logo from \"../utils/assets/img/mc.png\";\n\nexport default function Title() {\n    return (\n        <div className=\"header\">\n            <div>\n                <img src={Logo} className=\"Logo\" />\n            </div>\n            <div>\n                <text className=\"title\">¡Participa en el gran</text>\n            </div>\n            <div>\n                <text className=\"title\">sorteo navideño!</text>\n            </div>\n            <div className=\"divRP\">\n                <text className=\"RP\">ROYAL PRESTIGE</text>\n            </div>\n            <div>\n                <text className=\"titledistribuidor\">DISTRIBUIDOR AUTORIZADO</text>\n            </div>\n            <div className=\"premio\">\n                <text className=\"subtitle\">Gana hasta </text>\n                <text className=\"subtitle2\">$36,000</text>\n                <text className=\"subtitle\"> mil pesos en productos.</text>\n            </div>\n\n        </div>\n    )\n}\n","/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Footer.jsx",["49","50","51","52"],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/components/Video.jsx",[],"/home/onimeno/Documents/Projects/Web/Sites/landing-page-metacoaching/src/schemas/recomendados-schema.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":8,"column":17,"nodeType":"63","endLine":8,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":6,"column":1,"nodeType":"66","endLine":22,"endColumn":2},{"ruleId":"61","severity":1,"message":"62","line":16,"column":9,"nodeType":"63","endLine":16,"endColumn":53},{"ruleId":"61","severity":1,"message":"62","line":17,"column":9,"nodeType":"63","endLine":17,"endColumn":53},{"ruleId":"61","severity":1,"message":"62","line":18,"column":9,"nodeType":"63","endLine":18,"endColumn":50},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]