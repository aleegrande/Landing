[{"D:\\Documentos\\Proyectos\\landing-page\\src\\index.js":"1","D:\\Documentos\\Proyectos\\landing-page\\src\\App.js":"2","D:\\Documentos\\Proyectos\\landing-page\\src\\reportWebVitals.js":"3","D:\\Documentos\\Proyectos\\landing-page\\src\\pages\\home.jsx":"4","D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Banner.jsx":"5","D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Footer.jsx":"6","D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Title.jsx":"7","D:\\Documentos\\Proyectos\\landing-page\\src\\components\\FormRecomendados.jsx":"8","D:\\Documentos\\Proyectos\\landing-page\\src\\schemas\\recomendados-schema.js":"9","D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Video.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":377,"mtime":1607367102618,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":818,"mtime":1607550870887,"results":"15","hashOfConfig":"12"},{"size":158,"mtime":1607450370706,"results":"16","hashOfConfig":"12"},{"size":735,"mtime":1607549186678,"results":"17","hashOfConfig":"12"},{"size":992,"mtime":1607542921742,"results":"18","hashOfConfig":"12"},{"size":11468,"mtime":1607550340162,"results":"19","hashOfConfig":"12"},{"size":1472,"mtime":1607383177298,"results":"20","hashOfConfig":"12"},{"size":565,"mtime":1607541545161,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zlxrkx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documentos\\Proyectos\\landing-page\\src\\index.js",[],["44","45"],"D:\\Documentos\\Proyectos\\landing-page\\src\\App.js",[],"D:\\Documentos\\Proyectos\\landing-page\\src\\reportWebVitals.js",[],"D:\\Documentos\\Proyectos\\landing-page\\src\\pages\\home.jsx",[],"D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Banner.jsx",[],"D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Footer.jsx",["46","47","48","49"],"D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Title.jsx",["50"],"D:\\Documentos\\Proyectos\\landing-page\\src\\components\\FormRecomendados.jsx",["51"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport is from \"is_js\";\r\nimport { Formik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport swal from 'sweetalert2'\r\n\r\n\r\n// Schemas de validación\r\nimport RecomendadosSchema from \"../schemas/recomendados-schema\";\r\n\r\nconst url = \"http://201.151.177.210:8080/api/v1/people/q/add-referrer\";\r\n\r\nconst arrs = {\r\n  civilStatuses: [\"Soltero/a\", \"Casado/a\", \"Viudo/a\", \"Divorciado/a\"],\r\n  relationships: [\r\n    \"Familiar\",\r\n    \"Amigo/a\",\r\n    \"Conocido/a\",\r\n    \"Compañero/a de trabajo\",\r\n  ],\r\n  jobs: [\"Empleado/a\", \"Jubilado/a\", \"Ama de casa\", \"Estudiante\", \"No trabajo\"],\r\n  cities: [\r\n    \"Tijuana\",\r\n    \"Playas de Rosarito\",\r\n    \"Ensenada\",\r\n    \"Mexicali\",\r\n    \"Tecate\",\r\n    \"Otra\",\r\n  ],\r\n  careOfHealths: [\"Si\", \"No\", \"No sé\", \"A veces\"],\r\n};\r\n\r\n\r\n\r\nconst FormRecomendados = ({ phoneNumber }) => {\r\n  const handleSubmit = async (values) => {\r\n    const user = {\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      phoneNumber: values.phoneNumber,\r\n      owner: \"5fca85fde39d4c2b08a59482\",\r\n      referrerPhoneNumber: values.referrerPhoneNumber,\r\n      job: values.job,\r\n      city: values.city,\r\n      fields: [\r\n        {\r\n          propertyId: \"5fca8713e39d4c2b08a59483\",\r\n          data: [values.civilStatus],\r\n        },\r\n        {\r\n          propertyId: \"5fca8713e39d4c2b08a59484\",\r\n          data: [values.careOfHealth],\r\n        },\r\n        {\r\n          propertyId: \"5fca8713e39d4c2b08a59485\",\r\n          data: [values.disease],\r\n        },\r\n        {\r\n          propertyId: \"5fca8713e39d4c2b08a59486\",\r\n          data: [values.age],\r\n        },\r\n        {\r\n          propertyId: \"5fca8713e39d4c2b08a59487\",\r\n          data: [values.relationship],\r\n        },\r\n      ],\r\n    };\r\n\r\n    const { data, status } = await axios.post(url, user);\r\n    \r\n    if (status === 201) {\r\n      console.log(data);\r\n    }\r\n    var obj = { 0: 'Agrega el mayor número de referidos, y crea buenos hábitos en tus amigos.',\r\n                1: 'Cuida de tu cuerpo, es el único lugar que tienes para vivir, Utiliza Royal Prestige.', \r\n                2: 'La salud es una riqueza, cuida de tus amigos y su salud, regala un obsequio Royal Prestige al anotarlos aquí.',\r\n                3: 'Recuerda que entre más referidos agregues, más oportunidades tienes de ganar.',\r\n                4: 'Aprecia y valora tu salud y de quien te rodea todos los días, utiliza Royal Prestige.',\r\n                5: 'La felicidad radica ante todo en la salud, Comparte tu secreto de cocinar saludable, envía un regalo (sin costo para ti) y anota a más amigos.' };\r\n    swal.fire({\r\n      icon: 'success',\r\n      title: 'Folio:',\r\n      text: obj[Math.floor(Math.random() * (6 - 0) + 0)],\r\n    })\r\n\r\n  };\r\n\r\n  return (  \r\n    <Formik\r\n      initialValues={{\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phoneNumber: \"\",\r\n        referrerPhoneNumber: phoneNumber,\r\n        city: \"\",\r\n        careOfHealth: \"\",\r\n        disease: \"\",\r\n        civilStatus: \"\",\r\n        age: \"\",\r\n        relationship: \"\",\r\n        job: \"\",\r\n      }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={RecomendadosSchema}\r\n    >\r\n      {({\r\n        values,\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        setFieldValue,\r\n        errors,\r\n        touched,\r\n      }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form\">\r\n            {values.referrerPhoneNumber === \"\" ? (\r\n              <>\r\n                <h1 className=\"title2\">\r\n                  Proporciona tu número de teléfono antes de continuar:{\" \"}\r\n                </h1>\r\n                <div className=\"divform\">\r\n                  <label>\r\n                    Número de teléfono:{\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"referrerPhoneNumber\"\r\n                      value={values.referrerPhoneNumber}\r\n                      className=\"inputform\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n                  <p>{errors?.referrerPhoneNumber}</p>\r\n                </div>\r\n              </>\r\n            ) : null}\r\n\r\n            <h1 className=\"title2\">Datos acerca de tus recomendados: </h1>\r\n            <div>\r\n              <div className=\"divform\">\r\n                <label>\r\n                  Nombre:{\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    value={values.firstName}\r\n                    className=\"inputform\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </label>\r\n                <p>{errors?.firstName}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>\r\n                  Apellidos:{\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    className=\"inputform\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </label>\r\n                <p>{errors?.lastName}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>\r\n                   Número de teléfono:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    value={values.phoneNumber}\r\n                    className=\"inputform\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                </label>\r\n                <p>{errors?.lastName}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>¿En qué ciudad vive actualmente su recomendado?</label>\r\n                <div className=\"divRadio\">\r\n                  {arrs.cities.map((city, index) => (\r\n                    <React.Fragment key={`${city.toLowerCase()}-${index}`}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        value={values.city}\r\n                        name=\"city\"\r\n                        onChange={() => setFieldValue(\"city\", city)}\r\n                      />\r\n                      <text className=\"radioForm\">{city}</text>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n                <p>{errors?.city}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>A su recomendado, ¿Le gusta cuidar su salud?</label>\r\n                <div className=\"divRadio\">\r\n                {arrs.careOfHealths.map((careOfHealth, index) => (\r\n                  <React.Fragment\r\n                    key={`${careOfHealth.toLowerCase()}-${index}`}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value={values.careOfHealth}\r\n                      name=\"careOfHealth\"\r\n                      onChange={() =>\r\n                        setFieldValue(\"careOfHealth\", careOfHealth)\r\n                      }\r\n                    />\r\n                    <text className=\"radioForm\">{careOfHealth}</text>\r\n                  </React.Fragment>\r\n                ))}\r\n                </div>\r\n                <p>{errors?.careOfHealth}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>\r\n                  Su recomendado, ¿Padece de alguna enfermedad? ¿Cuál?\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"disease\"\r\n                    value={values.disease}\r\n                    className=\"inputform\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </label>\r\n                <p>{errors?.disease}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>¿Cuál es su estado civil ? </label>\r\n\r\n                <div className=\"divRadio\">\r\n                  {arrs.civilStatuses.map((civilStatus, index) => (\r\n                    <React.Fragment\r\n                      key={`${civilStatus.toLowerCase()}-${index}`}\r\n                    >\r\n                      <input\r\n                        type=\"radio\"\r\n                        value={values.civilStatus}\r\n                        name=\"civilStatus\"\r\n                        onChange={() =>\r\n                          setFieldValue(\"civilStatus\", civilStatus)\r\n                        }\r\n                      />\r\n                      <text className=\"radioForm\">{civilStatus}</text>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n                <p>{errors?.civilStatus}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>\r\n                  ¿Cuál es su edad?\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"age\"\r\n                    value={values.age}\r\n                    className=\"inputNumform\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </label>\r\n                <p>{errors?.age}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>¿Qué parentesco tiene usted con el recomendado? </label>\r\n                <div className=\"divRadio\">\r\n                  {arrs.relationships.map((relationship, index) => (\r\n                    <React.Fragment\r\n                      key={`${relationship.toLowerCase()}-${index}`}\r\n                    >\r\n                      <input\r\n                        type=\"radio\"\r\n                        value={values.relationship}\r\n                        name=\"relationship\"\r\n                        onChange={() =>\r\n                          setFieldValue(\"relationship\", relationship)\r\n                        }\r\n                      />\r\n                      <text className=\"radioForm\">{relationship}</text>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n                <p>{errors?.relationship}</p>\r\n              </div>\r\n              <div className=\"divform\">\r\n                <label>¿A qué se dedica su recomendado?</label>\r\n                <div className=\"divRadio\">\r\n                  {arrs.jobs.map((job, index) => (\r\n                    <React.Fragment key={`${job.toLowerCase()}-${index}`}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        value={values.job}\r\n                        name=\"job\"\r\n                        onChange={() => setFieldValue(\"job\", job)}\r\n                      />\r\n                      <text className=\"radioForm\">{job}</text>\r\n                    </React.Fragment>\r\n                  ))}\r\n                </div>\r\n                <p>{errors?.job}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"divform\">\r\n              <button\r\n                className=\"buttonForm\"\r\n                type=\"submit\"\r\n                disabled={is.not.empty(touched) && is.not.empty(errors)}>\r\n                ENVIAR\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nFormRecomendados.defaultProps = {\r\n  phoneNumber: \"\",\r\n};\r\n\r\nFormRecomendados.propTypes = {\r\n  phoneNumber: PropTypes.string,\r\n};\r\n\r\nexport default FormRecomendados;\r\n","D:\\Documentos\\Proyectos\\landing-page\\src\\schemas\\recomendados-schema.js",[],"D:\\Documentos\\Proyectos\\landing-page\\src\\components\\Video.jsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":7,"column":1,"nodeType":"58","endLine":20,"endColumn":2},{"ruleId":"59","severity":1,"message":"60","line":14,"column":17,"nodeType":"61","endLine":14,"endColumn":61},{"ruleId":"59","severity":1,"message":"60","line":15,"column":17,"nodeType":"61","endLine":15,"endColumn":61},{"ruleId":"59","severity":1,"message":"60","line":16,"column":17,"nodeType":"61","endLine":16,"endColumn":58},{"ruleId":"59","severity":1,"message":"60","line":8,"column":17,"nodeType":"61","endLine":8,"endColumn":52},{"ruleId":"62","severity":1,"message":"63","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":24},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]